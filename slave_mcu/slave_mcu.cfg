/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var ADC10 = xdc.useModule('ti.mcu.msp430.csl.adc.ADC10');
var Timer0_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer0_A3');
var USCI_A0 = xdc.useModule('ti.mcu.msp430.csl.communication.USCI_A0');
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
CSL.configApiVersion = "1.00.00";

/* these modules should be part of every project */
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var System = xdc.useModule('ti.mcu.msp430.csl.system.System');

/* enable interrupts at the end of CSL_init */
System.srRegs.SR.GIE = System.srDefs.GIE;

Program.sysStack = 0;
Program.heap = 0;
Program.argSize = 0;
Program.stack = 32;

/* set P1.0 as output so we can drive the attached LED */
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0;
System.ie1Regs.IE1.WDTIE = System.ie1Defs.WDTIE_OFF;
GPIO.regs.P1SEL.Bit6 = GPIO.defs.BIT6;
GPIO.regs.P1SEL2.Bit6 = GPIO.defs.BIT6;
System.ie2Regs.IE2.UCB0RXIE = System.ie2Defs.UCB0RXIE;
System.ie2Regs.IE2.UCB0TXIE = System.ie2Defs.UCB0TXIE;
GPIO.regs.P1DIR.Bit2 = GPIO.defs.BIT2_OFF;
GPIO.regs.P1SEL.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1DIR.Bit6 = GPIO.defs.BIT6_OFF;
GPIO.regs.P2DIR.Bit6 = GPIO.defs.BIT6;
GPIO.regs.P2SEL.Bit6 = GPIO.defs.BIT6;
GPIO.regs.P3DIR.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P3SEL.Bit5 = GPIO.defs.BIT5_OFF;
CSL.device.vcc = 3.3;
ADC10.regs.ADC10CTL0.ADC10ON = ADC10.defs.ADC10ON;
ADC10.regs.ADC10AE0 = 32;
ADC10.regs.ADC10CTL1.CONSEQ = ADC10.defs.CONSEQ_2;
ADC10.regs.ADC10CTL0.ADC10SR = ADC10.defs.ADC10SR;
ADC10.regs.ADC10CTL1.SHS = ADC10.defs.SHS_2;
ADC10.regs.ADC10CTL0.ADC10IE = ADC10.defs.ADC10IE;
ADC10.adc10Handler = "adc_ready";
GPIO.regs.P1SEL.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P1SEL2.Bit1 = GPIO.defs.BIT1;
GPIO.regs.P1SEL2.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P1SEL.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P1SEL2.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P1SEL.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P1SEL2.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P2SEL.Bit7 = GPIO.defs.BIT7_OFF;
GPIO.regs.P1SEL.Bit7 = GPIO.defs.BIT7;
GPIO.regs.P1SEL2.Bit7 = GPIO.defs.BIT7;
GPIO.regs.P2DIR.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P2DIR.Bit2 = GPIO.defs.BIT2;
GPIO.regs.P2DIR.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P2SEL.Bit0 = GPIO.defs.BIT0_OFF;
GPIO.regs.P2DIR.Bit3 = GPIO.defs.BIT3;
GPIO.regs.P2SEL.Bit3 = GPIO.defs.BIT3_OFF;
GPIO.regs.P2SEL.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P1DIR.Bit5 = GPIO.defs.BIT5;
GPIO.regs.P2DIR.Bit4 = GPIO.defs.BIT4;
GPIO.regs.P2SEL.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P2DIR.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P2SEL.Bit5 = GPIO.defs.BIT5_OFF;
GPIO.regs.P1DIR.Bit4 = GPIO.defs.BIT4_OFF;
GPIO.regs.P1DIR.Bit1 = GPIO.defs.BIT1_OFF;
GPIO.regs.P1SEL.Bit0 = GPIO.defs.BIT0_OFF;
ADC10.regs.ADC10CTL1.INCH = ADC10.defs.INCH_5;
ADC10.regs.ADC10CTL0.REFON = ADC10.defs.REFON_OFF;
ADC10.regs.ADC10CTL0.ADC10SHT = ADC10.defs.ADC10SHT_3;
ADC10.regs.ADC10CTL1.ADC10DIV = ADC10.defs.ADC10DIV_3;
ADC10.regs.ADC10CTL0.SREF = ADC10.defs.SREF_0;
ADC10.regs.ADC10CTL0.REF2_5V = ADC10.defs.REF2_5V_OFF;
ADC10.regs.ADC10CTL0.MSC = ADC10.defs.MSC_OFF;
ADC10.regs.ADC10CTL1.ADC10SSEL = ADC10.defs.ADC10SSEL_0;
Timer0_A3.ccr0TimerSelection_BasicView = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_BasicView_Selection_3;
Timer0_A3.ccr0TimerSelection_PowerUser = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCR0TimerSelection_PowerUser_Selection_1;
Timer0_A3.ccInputPin[0] = 0;
Timer0_A3.regs.TA0CTL.MC = Timer0_A3.defs.MC_1;
Timer0_A3.regs.TA0CCR0 = 500;
Timer0_A3.regs.TA0CTL.TASSEL = Timer0_A3.defs.TASSEL_2;
Timer0_A3.inputClockToTimer = 1000.0;
Timer0_A3.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_1;
Timer0_A3.ccrXTimerSelection_PowerUser[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_1;
Timer0_A3.ccInputPin[2] = 0;
Timer0_A3.regs.TA0CCR1 = 0;
Timer0_A3.regs.TA0CCTL1.OUTMOD = Timer0_A3.defs.OUTMOD_7;
Timer0_A3.ccrOutputPin[1] = 3;
Timer0_A3.ccrOutputPin[2] = 0;
Timer0_A3.ccrOutputPin[0] = 0;
Timer0_A3.regs.TA0CCTL0.OUTMOD = Timer0_A3.defs.OUTMOD_4;
USCI_A0.toggleButtonUART = true;
USCI_A0.showSelectionPage = false;
USCI_A0.uartRegs.UCA0CTL1.UCSSEL = USCI_A0.uartDefs.UCSSEL_2;
USCI_A0.usciUartPin[0] = 1;
USCI_A0.usciUartPin[1] = 1;
USCI_A0.standardBaudRatesBasicViewUART = USCI_A0.BaudRate_4;
USCI_A0.standardBaudRatesPowerViewUART = USCI_A0.BaudRate_4;
USCI_A0.uartRegs.UCA0BR0 = 104;
USCI_A0.uartRegs.UCA0MCTL.UCBRS = USCI_A0.uartDefs.UCBRS_1;
System.ie2Regs.IE2.UCA0TXIE = System.ie2Defs.UCA0TXIE_OFF;
System.ie2Regs.IE2.UCA0RXIE = System.ie2Defs.UCA0RXIE;
USCI_A0.txIntHandler = "";
USCI_A0.rxIntHandler = "uart_rx";
Timer0_A3.regs.TA0CCTL0.CCIE = Timer0_A3.defs.CCIE;
Timer0_A3.ccr0InterruptHandler = "timer0_tick";
Timer0_A3.inClkPin[0] = 0;
Timer0_A3.txClkPin[0] = 0;
Timer0_A3.regs.TA0CTL.ID = Timer0_A3.defs.ID_0;
